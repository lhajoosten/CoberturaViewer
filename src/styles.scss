// Import base styles
@use "./styles/_tokens" as tokens;
@use "./styles/_mixins" as mixins;
@use "./styles/_styles" as styles;
@use "sass:color";

// Initialize CSS variables for our tokens
@include tokens.export-css-variables();

// ========================================================
// APPLICATION-SPECIFIC STYLING
// ========================================================

// App container
.app-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  width: 100%;
  box-sizing: border-box;
  position: relative;
  padding: 0;
  background-color: tokens.color("background");
  color: tokens.color("text");
  transition: tokens.transition();

  &.dark-theme {
    background-color: tokens.color("background-dark");
    color: tokens.color("text-dark");
  }
}

// Content wrapper for consistent padding
.app-content-wrapper {
  max-width: 1600px;
  width: 100%;
  margin: 0 auto;
  padding: 0 max(tokens.spacing("md"), min(25rem, 5%));
  box-sizing: border-box;

  @include mixins.breakpoint(xl) {
    padding: 0 max(tokens.spacing("md"), min(15rem, 10%));
  }

  @include mixins.breakpoint(lg) {
    padding: 0 max(tokens.spacing("md"), min(10rem, 8%));
  }

  @include mixins.breakpoint(md) {
    padding: 0 max(tokens.spacing("md"), 5%);
  }
}

// Sticky header
.app-header {
  position: sticky;
  top: 0;
  z-index: tokens.z-index("sticky");
  width: 100%;
  background-color: tokens.color("background");
  padding: tokens.spacing("md") 0;

  .dark-theme & {
    background-color: tokens.color("background-dark");
  }
}

// Header content styling
.header-content {
  @include mixins.flex-between;
  height: 4rem;
  background-color: tokens.color("surface");
  border-radius: tokens.border-radius("lg");
  padding: 0 tokens.spacing("lg");
  box-shadow: tokens.shadow("base");
  max-width: 1600px;
  margin: 0 auto;
  width: 100%;
  box-sizing: border-box;

  .dark-theme & {
    background-color: tokens.color("surface-dark");
    box-shadow: tokens.shadow("base", true);
  }

  @include mixins.breakpoint(md) {
    flex-direction: row;
    flex-wrap: wrap;
    height: auto;
    padding: tokens.spacing("md");
    gap: tokens.spacing("md");
  }
}

// Logo styling
.logo {
  display: flex;
  align-items: center;

  h1 {
    margin: 0;
    @include mixins.font-size("xl");
    font-weight: 600;
    color: tokens.color("primary");

    @include mixins.breakpoint(md) {
      @include mixins.font-size("lg");
    }
  }

  @include mixins.breakpoint(md) {
    order: 1;
    width: auto;
    flex: 1;
  }
}

// Main content area
.main-content {
  flex: 1;
  width: 100%;
  display: flex;
  flex-direction: column;
  padding: tokens.spacing("lg") 0;

  @include mixins.breakpoint(md) {
    padding: tokens.spacing("md") 0;
  }
}

// Footer styling
.app-footer {
  position: sticky;
  bottom: 0;
  z-index: tokens.z-index("sticky");
  width: 100%;
  background-color: tokens.color("background");
  padding: tokens.spacing("md") 0;

  .dark-theme & {
    background-color: tokens.color("background-dark");
  }
}

// Footer content
.footer-content {
  @include mixins.flex-between;
  background-color: tokens.color("surface");
  border-radius: tokens.border-radius("lg");
  padding: tokens.spacing("lg");
  box-shadow: tokens.shadow("base");
  max-width: 1600px;
  margin: 0 auto;
  width: 100%;
  box-sizing: border-box;

  .dark-theme & {
    background-color: tokens.color("surface-dark");
    box-shadow: tokens.shadow("base", true);
  }

  .copyright {
    color: tokens.color("text-muted");
    @include mixins.font-size("base");

    .dark-theme & {
      color: tokens.color("text-muted-dark");
    }
  }

  .footer-links {
    a {
      @include mixins.flex-center;
      gap: tokens.spacing("sm");
      color: tokens.color("text-muted");
      text-decoration: none;

      &:hover {
        color: tokens.color("primary");
      }

      i {
        @include mixins.font-size("md");
      }

      .dark-theme & {
        color: tokens.color("text-muted-dark");

        &:hover {
          color: color.adjust(tokens.color("primary"), $lightness: 15%);
        }
      }
    }
  }
}

// Theme toggle button
app-theme-toggle {
  position: fixed;
  right: tokens.spacing("lg");
  bottom: tokens.spacing("xxl");
  z-index: tokens.z-index("fixed");
}

// Compare button
.compare-btn {
  @include mixins.primary-button;
  @include mixins.flex-center;
  gap: tokens.spacing("sm");
  padding: tokens.spacing("sm") tokens.spacing("md");
  font-weight: 500;
  @include mixins.font-size("base");
  box-shadow: tokens.shadow("sm");

  &:hover {
    transform: translateY(-1px);
    box-shadow: tokens.shadow("md");
  }

  &:active {
    transform: translateY(0);
    box-shadow: tokens.shadow("sm");
  }

  i {
    @include mixins.font-size("base");
  }

  &:hover i {
    animation: spin-half 0.5s ease;
  }

  @include mixins.breakpoint(md) {
    padding: 6px 12px;
    @include mixins.font-size("sm");
  }

  @include mixins.breakpoint(sm) {
    padding: tokens.spacing("sm");
    border-radius: 50%;
    aspect-ratio: 1/1;
    justify-content: center;

    span {
      display: none;
    }

    i {
      margin-right: 0;
      @include mixins.font-size("lg");
    }
  }
}

// Button animations
@keyframes spin-half {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// Header actions
.header-actions {
  display: flex;
  align-items: center;
  gap: tokens.spacing("md");

  @include mixins.breakpoint(md) {
    order: 2;
    margin-left: auto;
  }
}

// Empty state styling
.empty-state {
  @include mixins.flex-column;
  @include mixins.flex-center;
  height: 100%;
  text-align: center;
  padding: tokens.spacing("xl");

  .empty-icon {
    @include mixins.flex-center;
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background-color: tokens.color("primary-bg");
    margin-bottom: tokens.spacing("lg");

    i {
      font-size: 36px;
      color: tokens.color("primary");
    }

    .dark-theme & {
      background-color: rgba(tokens.color("primary"), 0.2);
    }
  }

  h2 {
    margin-bottom: tokens.spacing("md");
  }

  .empty-hint {
    color: tokens.color("text-muted");
    margin-bottom: tokens.spacing("xl");
    max-width: 400px;

    .dark-theme & {
      color: tokens.color("text-muted-dark");
    }
  }

  .empty-action {
    @include mixins.primary-button;
    padding: tokens.spacing("md") tokens.spacing("lg");

    i {
      margin-right: tokens.spacing("sm");
    }
  }
}
