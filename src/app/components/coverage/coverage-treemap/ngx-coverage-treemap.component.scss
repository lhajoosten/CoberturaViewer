@use "../../../../styles/_tokens" as tokens;
@use "../../../../styles/_mixins" as mixins;
@use "sass:map";

.treemap-container {
  @include mixins.card;
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}

// Control Panel Styles
.control-panel {
  @include mixins.flex-between;
  padding: spacing("md") spacing("lg");
  background-color: tokens.color("card-header-bg");
  border-bottom: 1px solid tokens.color("border");

  // Filter Row Layout
  .filter-row {
    @include mixins.flex-center;
    flex-wrap: wrap;
    gap: spacing("md");
    margin-bottom: spacing("md");
  }

  // Filter Group Base Styles
  .filter-group {
    flex: 1;
    min-width: 180px;

    label {
      @include mixins.font-size("sm");
      font-weight: 500;
      margin-bottom: spacing("xs");
      color: tokens.color("text-muted");
    }

    &.search-group {
      flex: 2;
    }
  }
}

// Slider and Input Styles
.slider-container {
  @include mixins.flex-center;
  gap: spacing("sm");
  background-color: tokens.color("surface");
  border-radius: map.get(tokens.$border-radius, "md");
  padding: spacing("xs") spacing("sm");
  border: 1px solid tokens.color("border");

  input[type="range"] {
    flex: 1;
    cursor: pointer;
    accent-color: tokens.color("primary");
    appearance: none;
    background: transparent;

    &::-webkit-slider-thumb {
      appearance: none;
      height: 16px;
      width: 16px;
      background: tokens.color("primary");
      border-radius: 50%;
      cursor: pointer;
    }
  }

  .slider-value {
    min-width: 40px;
    font-weight: 600;
    @include mixins.font-size("sm");
    text-align: right;
    color: tokens.color("primary");
    background-color: tokens.color("primary-bg");
    padding: spacing("xs") spacing("sm");
    border-radius: map.get(tokens.$border-radius, "md");
  }
}

// Search Container
.search-container {
  position: relative;

  input {
    @include mixins.input-base;
    padding-right: spacing("xxl");
  }

  i {
    position: absolute;
    right: spacing("md");
    top: 50%;
    transform: translateY(-50%);
    color: tokens.color("text-muted");
  }
}

// Sort and Action Controls
.sort-group,
.action-buttons {
  @include mixins.flex-center;
  flex-wrap: wrap;
  gap: spacing("md");
}

// Visualization Container
.visualization-container {
  position: relative;
  flex: 1;
  overflow: hidden;

  // Loading and Empty States
  .loading-overlay,
  .empty-state {
    @include mixins.flex-center;
    background-color: rgba(tokens.color("background"), 0.8);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 10;
  }

  .loading-spinner {
    @include mixins.loading-spinner;
  }

  .empty-state {
    flex-direction: column;
    text-align: center;
    color: tokens.color("text-muted");

    i {
      @include mixins.font-size("huge");
      margin-bottom: spacing("md");
    }

    p {
      @include mixins.font-size("base");
    }
  }
}

// Tooltip Styles
.tooltip {
  @include mixins.tooltip;

  .tooltip-content {
    display: flex;
    flex-direction: column;
  }

  .tooltip-header {
    padding: spacing("sm") spacing("md");
    background-color: tokens.color("card-header-bg");
    border-bottom: 1px solid tokens.color("border");
  }

  .node-type {
    @include mixins.flex-center;
    padding: 0.25rem 0.5rem;
    border-radius: map.get(tokens.$border-radius, "sm");
    text-transform: uppercase;
    @include mixins.font-size("xs");
    font-weight: bold;

    &.package {
      background-color: tokens.color("info-bg");
      color: tokens.color("info");
    }
    &.class {
      background-color: tokens.color("accent-bg");
      color: tokens.color("accent-dark");
    }
    &.grouped {
      background-color: tokens.color("warning-bg");
      color: tokens.color("warning");
    }
  }

  .tooltip-title {
    font-weight: 600;
    word-break: break-word;
    color: tokens.color("text");
  }

  .tooltip-metrics {
    padding: spacing("sm") spacing("md");

    .tooltip-row {
      @include mixins.flex-between;
      margin-bottom: spacing("xs");
      @include mixins.font-size("sm");

      span:first-child {
        color: tokens.color("text-muted");
      }

      span:last-child {
        font-weight: 500;
        color: tokens.color("text");
      }
    }
  }
}

// Responsive Adjustments
@include mixins.breakpoint(md) {
  .control-panel {
    .filter-row {
      flex-direction: column;
      gap: spacing("sm");
    }

    .filter-group {
      width: 100%;
    }
  }
}

@include mixins.breakpoint(sm) {
  .control-panel {
    padding: spacing("sm");
  }
}

// Coverage Legend
.coverage-legend {
  @include mixins.flex-center;
  justify-content: center;
  gap: spacing("md");
  padding: spacing("md");
  background-color: tokens.color("card-header-bg");
  border-top: 1px solid tokens.color("border");

  .legend-title {
    @include mixins.font-size("sm");
    color: tokens.color("text-muted");
    font-weight: 500;
  }

  .legend-items {
    @include mixins.flex-center;
    gap: spacing("md");
  }

  .legend-item {
    @include mixins.flex-center;
    gap: spacing("xs");
    @include mixins.font-size("sm");
    color: tokens.color("text-muted");
  }

  .color-box {
    width: 12px;
    height: 12px;
    border-radius: map.get(tokens.$border-radius, "sm");

    &.excellent {
      background-color: tokens.color("success");
    }
    &.good {
      background-color: tokens.color("accent");
    }
    &.moderate {
      background-color: tokens.color("warning");
    }
    &.poor {
      background-color: tokens.color("error");
    }
  }
}
