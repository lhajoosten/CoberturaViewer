@use "../../../../styles/_tokens" as tokens;
@use "../../../../styles/_mixins" as mixins;

.sunburst-container {
  @include mixins.card;
  position: relative;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.toolbar {
  @include mixins.flex-between;
  margin-bottom: tokens.spacing("md");

  h2 {
    margin: 0;
    display: flex;
    align-items: center;
    gap: tokens.spacing("xs");
  }
}

.toolbar-actions {
  display: flex;
  gap: tokens.spacing("xs");
}

.toolbar-btn {
  @include mixins.icon-button(32px);
}

.navigation-bar {
  margin-bottom: tokens.spacing("md");
  padding-bottom: tokens.spacing("sm");
  border-bottom: 1px solid tokens.color("border");

  .dark-theme & {
    border-bottom-color: tokens.color("border-dark");
  }
}

.breadcrumbs {
  display: flex;
  flex-wrap: wrap;
  gap: tokens.spacing("xs");
}

.breadcrumb-item {
  font-size: tokens.font-size("sm");
  color: tokens.color("text-muted");
  cursor: pointer;
  position: relative;
  padding-right: tokens.spacing("sm");

  &:not(:last-child)::after {
    content: "/";
    position: absolute;
    right: 0;
    color: tokens.color("border");
  }

  &:hover {
    color: tokens.color("primary");
  }

  &.active {
    color: tokens.color("text");
    font-weight: 500;
    cursor: default;
  }

  .dark-theme & {
    color: tokens.color("text-muted-dark");

    &:not(:last-child)::after {
      color: tokens.color("border-dark");
    }

    &:hover {
      color: tokens.color("primary-light");
    }

    &.active {
      color: tokens.color("text-dark");
    }
  }
}

.chart-container {
  position: relative;
  flex: 1;
  min-height: 300px;
  margin-bottom: tokens.spacing("md");
}

.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(tokens.color("card-bg"), 0.8);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 2;

  .dark-theme & {
    background-color: rgba(tokens.color("card-bg-dark"), 0.8);
  }

  .spinner {
    @include mixins.loading-spinner;
    margin-bottom: tokens.spacing("md");
  }

  span {
    font-weight: 500;
    color: tokens.color("text-muted");

    .dark-theme & {
      color: tokens.color("text-muted-dark");
    }
  }
}

.empty-state {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: tokens.color("text-muted");

  .dark-theme & {
    color: tokens.color("text-muted-dark");
  }

  i {
    font-size: 3rem;
    margin-bottom: tokens.spacing("md");
    opacity: 0.3;
  }

  p {
    font-weight: 500;
  }
}

.tooltip {
  position: absolute;
  background-color: tokens.color("card-bg");
  border: 1px solid tokens.color("border");
  border-radius: tokens.border-radius("md");
  box-shadow: tokens.shadow("lg");
  padding: tokens.spacing("sm");
  pointer-events: none;
  z-index: 10;
  min-width: 180px;
  transition: opacity 0.2s;

  .dark-theme & {
    background-color: tokens.color("card-bg-dark");
    border-color: tokens.color("border-dark");
    box-shadow: tokens.shadow("lg", true);
  }
}

.tooltip-content {
  .tooltip-header {
    margin-bottom: tokens.spacing("xs");

    .node-type {
      display: inline-block;
      font-size: tokens.font-size("xs");
      padding: 2px tokens.spacing("xs");
      border-radius: tokens.border-radius("sm");
      margin-bottom: 2px;

      &.package {
        background-color: tokens.color("primary-bg");
        color: tokens.color("primary");

        .dark-theme & {
          background-color: rgba(tokens.color("primary"), 0.15);
          color: tokens.color("primary-light");
        }
      }

      &.class {
        background-color: tokens.color("accent-bg");
        color: tokens.color("accent-dark");

        .dark-theme & {
          background-color: rgba(tokens.color("accent"), 0.15);
          color: tokens.color("accent-light");
        }
      }
    }

    .tooltip-title {
      font-weight: 500;
      @include mixins.text-truncate;
      max-width: 200px;
    }
  }
}

.tooltip-metrics {
  font-size: tokens.font-size("sm");
}

.tooltip-row {
  display: flex;
  justify-content: space-between;
  margin-bottom: tokens.spacing("xxs");

  &:last-child {
    margin-bottom: 0;
  }

  span:first-child {
    color: tokens.color("text-muted");

    .dark-theme & {
      color: tokens.color("text-muted-dark");
    }
  }

  span:last-child {
    font-weight: 500;
    @include mixins.coverage-status;
  }
}

.info-panel {
  background-color: tokens.color("surface");
  border-radius: tokens.border-radius("md");
  padding: tokens.spacing("md");
  margin-bottom: tokens.spacing("md");

  .dark-theme & {
    background-color: tokens.color("surface-dark");
  }
}

.node-info {
  .info-header {
    @include mixins.flex-between;
    margin-bottom: tokens.spacing("sm");

    h3 {
      margin: 0;
      font-weight: 500;
      @include mixins.text-truncate;
      max-width: 70%;
    }
  }
}

.coverage-badge {
  display: inline-block;
  padding: tokens.spacing("xxs") tokens.spacing("xs");
  border-radius: tokens.border-radius("sm");
  font-weight: 600;
  font-size: tokens.font-size("sm");
  @include mixins.coverage-status;

  &.excellent {
    background-color: tokens.color("success-bg");
  }

  &.good {
    background-color: tokens.color("accent-bg");
  }

  &.moderate {
    background-color: tokens.color("warning-bg");
  }

  &.poor {
    background-color: tokens.color("error-bg");
  }
}

.metrics-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  gap: tokens.spacing("sm");
}

.metric-card {
  text-align: center;

  .metric-title {
    font-size: tokens.font-size("xs");
    color: tokens.color("text-muted");
    margin-bottom: tokens.spacing("xxs");

    .dark-theme & {
      color: tokens.color("text-muted-dark");
    }
  }

  .metric-value {
    font-size: tokens.font-size("lg");
    font-weight: 600;
  }
}

.legend {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: tokens.spacing("md");
  padding-top: tokens.spacing("sm");
  border-top: 1px solid tokens.color("border");

  .dark-theme & {
    border-top-color: tokens.color("border-dark");
  }
}

.legend-item {
  display: flex;
  align-items: center;
  gap: tokens.spacing("xs");
  font-size: tokens.font-size("sm");
}

.color-box {
  width: 12px;
  height: 12px;
  border-radius: 2px;

  &.excellent {
    background-color: tokens.color("success");
  }

  &.good {
    background-color: tokens.color("accent-dark");
  }

  &.moderate {
    background-color: tokens.color("warning");
  }

  &.poor {
    background-color: tokens.color("error");
  }
}
