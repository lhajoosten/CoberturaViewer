import{a as I}from"./chunk-XC5NQH5T.js";import{c as f,l as U}from"./chunk-GQYAU5FR.js";import{J as v,L as b,O as u,T as l,g as m,k as S,l as a,o as d,x as p}from"./chunk-SU5VR5TY.js";var h=class i{sessionStart=null;constructor(){this.loadSession()}loadSession(){let r=localStorage.getItem("current_session");if(r)try{let e=JSON.parse(r);this.sessionStart=new Date(e.startTime)}catch(e){console.error("Error loading session data:",e),this.resetSession()}}startNewSession(){this.sessionStart=new Date,this.saveSession()}getSessionStartTime(){return this.sessionStart||this.startNewSession(),this.sessionStart}saveSession(){let r={startTime:this.sessionStart?.toISOString()};localStorage.setItem("current_session",JSON.stringify(r))}resetSession(){this.sessionStart=null,localStorage.removeItem("current_session")}static \u0275fac=function(e){return new(e||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})};var n={production:!1,github:{clientId:"Ov23liUghCDZkiBqtV6L",redirectUri:"http://localhost:4200/auth/callback",scope:"read:user user:email"},apiBaseUrl:"http://localhost:3000/api"};var w=class i{constructor(r,e,t,s){this.http=r;this.router=e;this.toastService=t;this.sessionService=s;this.loadUserFromStorage()}currentUserSubject=new m(null);currentUser$=this.currentUserSubject.asObservable();loginWithGitHub(){localStorage.removeItem("github_auth_state");let r="https://github.com/login/oauth/authorize",e=n.github.clientId,t=encodeURIComponent(n.github.redirectUri),s=n.github.scope,o=this.generateRandomState();localStorage.setItem("github_auth_state",o);let c=`${r}?client_id=${e}&redirect_uri=${t}&scope=${s}&state=${o}`;window.location.href=c}handleAuthCallback(r,e){let t=localStorage.getItem("github_auth_state");return t?t!==e?(console.error("State mismatch: Expected",t,"Got",e),a(()=>new Error("Security verification failed. Invalid state parameter."))):(localStorage.removeItem("github_auth_state"),this.toastService.showInfo("Authenticating","Completing your sign-in..."),this.http.get(`${n.apiBaseUrl}/auth/github/callback?code=${r}`).pipe(b(s=>console.log("Got response from backend:",s)),v(s=>{let{user:o,token:c}=s;if(!o||!c)return console.error("Invalid response from server"),a(()=>new Error("Invalid authentication response"));localStorage.setItem("access_token",c);let g={id:o.id.toString(),login:o.login,name:o.name||o.login,email:o.email||`${o.login}@users.noreply.github.com`,avatar:o.avatar_url,provider:"github",roles:["user"],accessToken:c,bio:o.bio,location:o.location,company:o.company,profileUrl:o.html_url,createdAt:o.created_at,followers:o.followers,following:o.following,publicRepos:o.public_repos,publicGists:o.public_gists};return this.currentUserSubject.next(g),localStorage.setItem("current_user",JSON.stringify(g)),this.sessionService.startNewSession(),S(g)}),p(s=>(console.error("Error in auth callback:",s),this.toastService.showError("Authentication Failed","Unable to complete GitHub authentication"),a(()=>s))))):(console.error("No state found in localStorage"),a(()=>new Error("Security verification failed. No state found.")))}refreshGitHubData(){let r=this.getAccessToken();return r?this.http.get(`${n.apiBaseUrl}/auth/github/refresh`,{headers:{Authorization:`Bearer ${r}`}}).pipe(d(e=>{let t=e.user,s={id:t.id.toString(),login:t.login,name:t.name||t.login,email:t.email||`${t.login}@users.noreply.github.com`,avatar:t.avatar_url,provider:"github",roles:this.getCurrentUser()?.roles||["user"],accessToken:r,bio:t.bio,location:t.location,company:t.company,profileUrl:t.html_url,createdAt:t.created_at,followers:t.followers,following:t.following,publicRepos:t.public_repos,publicGists:t.public_gists};return this.currentUserSubject.next(s),localStorage.setItem("current_user",JSON.stringify(s)),s}),p(e=>(console.error("Error refreshing GitHub data:",e),e.status===401?(this.toastService.showError("Session Expired","Your session has expired. Please log in again."),this.logout()):this.toastService.showError("Refresh Failed","Could not refresh GitHub data. Please try again later."),a(()=>e)))):(this.toastService.showError("Authentication Error","No valid token found. Please log in again."),a(()=>new Error("No valid token found")))}loadUserFromStorage(){let r=localStorage.getItem("current_user");if(r)try{let e=JSON.parse(r);this.currentUserSubject.next(e)}catch(e){console.error("Error loading user from storage:",e),localStorage.removeItem("current_user")}}isLoggedIn(){return this.currentUserSubject.value!==null}hasRole(r){let e=this.currentUserSubject.value;return e!==null&&e.roles.includes(r)}getCurrentUser(){return this.currentUserSubject.value}getAccessToken(){return this.currentUserSubject.value?.accessToken||localStorage.getItem("access_token")}logout(){this.currentUserSubject.next(null),localStorage.removeItem("current_user"),localStorage.removeItem("access_token"),this.sessionService.resetSession(),this.toastService.showInfo("Logged Out","You have been successfully logged out."),this.router.navigate(["/"])}generateRandomState(){return Math.random().toString(36).substring(2,15)}static \u0275fac=function(e){return new(e||i)(l(f),l(U),l(I),l(h))};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})};export{h as a,w as b};
